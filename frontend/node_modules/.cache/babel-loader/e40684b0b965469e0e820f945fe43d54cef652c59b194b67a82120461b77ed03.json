{"ast":null,"code":"var _jsxFileName = \"/Users/malikashahi/Documents/malikka/NYU/fall 2023/databases/db-project/frontend/src/Crimes.js\",\n  _s = $RefreshSig$();\nimport SignOut from \"./SignOut\";\nimport NavBar from \"./NavBar\";\nimport './Style.css';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Crimes() {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n\n  /* api call for data */\n  useEffect(() => {\n    axios.get(\"http://localhost:3300/api/sentence-data\", data).then(res => setData(res.data)).catch(err => {\n      console.error(err);\n    });\n  });\n\n  /* handling selection of rows */\n  const toggleSelection = index => {\n    const newSelectedRowKeys = [...selectedRowKeys];\n    if (newSelectedRowKeys.includes(index)) {\n      // Row is already selected, so remove it\n      newSelectedRowKeys.splice(newSelectedRowKeys.indexOf(index), 1);\n    } else {\n      // Row is not selected, so add it\n      newSelectedRowKeys.push(index);\n    }\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  /* pagination */\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"crimes page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Crimes, \"eP3PF2gwFuR2LdjEn9A+70nune4=\");\n_c = Crimes;\nexport default Crimes;\nvar _c;\n$RefreshReg$(_c, \"Crimes\");","map":{"version":3,"names":["SignOut","NavBar","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Crimes","_s","data","setData","selectedRowKeys","setSelectedRowKeys","currentPage","setCurrentPage","itemsPerPage","get","then","res","catch","err","console","error","toggleSelection","index","newSelectedRowKeys","includes","splice","indexOf","push","indexOfLastItem","paginate","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/malikashahi/Documents/malikka/NYU/fall 2023/databases/db-project/frontend/src/Crimes.js"],"sourcesContent":["import SignOut from \"./SignOut\";\nimport NavBar from \"./NavBar\";\nimport './Style.css'\nimport {useState, useEffect} from \"react\";\nimport axios from \"axios\";\n\nfunction Crimes() {\n    const [data, setData] = useState([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage] = useState(5);\n\n    /* api call for data */\n    useEffect(() => {\n        axios.get(\"http://localhost:3300/api/sentence-data\", data)\n        .then((res) => setData(res.data))\n        .catch(err => { console.error(err); });\n    });\n\n    /* handling selection of rows */\n    const toggleSelection = (index) => {\n        const newSelectedRowKeys = [...selectedRowKeys];\n        if (newSelectedRowKeys.includes(index)) {\n          // Row is already selected, so remove it\n          newSelectedRowKeys.splice(newSelectedRowKeys.indexOf(index), 1);\n        } else {\n          // Row is not selected, so add it\n          newSelectedRowKeys.push(index);\n        }\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    /* pagination */\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    return (\n        <>\n        <NavBar />\n        <h1>crimes page</h1>\n        <SignOut />\n        </>\n    )\n}\n\nexport default Crimes;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,aAAa;AACpB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAElC;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACc,GAAG,CAAC,yCAAyC,EAAEP,IAAI,CAAC,CACzDQ,IAAI,CAAEC,GAAG,IAAKR,OAAO,CAACQ,GAAG,CAACT,IAAI,CAAC,CAAC,CAChCU,KAAK,CAACC,GAAG,IAAI;MAAEC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAE,CAAC,CAAC;EAC1C,CAAC,CAAC;;EAEF;EACA,MAAMG,eAAe,GAAIC,KAAK,IAAK;IAC/B,MAAMC,kBAAkB,GAAG,CAAC,GAAGd,eAAe,CAAC;IAC/C,IAAIc,kBAAkB,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;MACtC;MACAC,kBAAkB,CAACE,MAAM,CAACF,kBAAkB,CAACG,OAAO,CAACJ,KAAK,CAAC,EAAE,CAAC,CAAC;IACjE,CAAC,MAAM;MACL;MACAC,kBAAkB,CAACI,IAAI,CAACL,KAAK,CAAC;IAChC;IACAZ,kBAAkB,CAACa,kBAAkB,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGjB,WAAW,GAAGE,YAAY;EAClD,MAAMgB,QAAQ,GAAIC,UAAU,IAAKlB,cAAc,CAACkB,UAAU,CAAC;EAE3D,oBACI5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACA7B,OAAA,CAACL,MAAM;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjC,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjC,OAAA,CAACN,OAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACT,CAAC;AAEX;AAAC7B,EAAA,CArCQD,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAuCf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}